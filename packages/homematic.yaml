###############################################################################
#   @author       : Max Reigl
#   @date         : 09.07.2023
#   @created      : 29.01.2020
#   @package      : homematic
#   @description  : 2023: Umstellung auf HomaticIP_Local Custom Integration
#   @links        : https://github.com/danielperna84/custom_homematic
###############################################################################
# Parameter Wandthermostat WZ
#  ch 0: 
#    Zyklische Statusmeldung: true
#    Anzahl der auszulassenden Statusmeldungen: 1
#    Anzahl der auszulassenden unveränderten Statusmeldungen: 1
#  ch 1:
#    Minimale Temperatur: AUS
#    Maximale Temperatur: EIN
#    Temperatur-Offset: -0.5
#  ch 5:
#    Art der Zweipunktregelung: Heizen
#    Hysterese: 0.40
#  ch 8:
#    Kühlen im Kühlmode: Nicht aktiv
#    Heizen im Heizmode: Aktiv
#    Art/Typ der Anlage: Radiator
#    Art des Raumes: Standard Raum
#    Ventiltyp: NC
#    Intervall der Entkalkungsfahrt bei Nichtbenutzung: 14 Tage

#----------------------------------------------------------------------------------
# HmIP-Thermostate Ist-Temperatur
#   GZ: ohne Heizung ok, während Heizen ca. +1°C
#----------------------------------------------------------------------------------
# HmIP-BRC2 Wandtaster wird nicht als entity nach HA exportiert, da er keinen Status hat.
# in Hm-CCU wurden 2 "pseudo"-Programme angelegt, um den Tastendruck an HA zu senden.
# ID für HmIP-BRC2 wurde über das logging ermittelt.
# Key:   6uk95-ykbw7-wb51f-9xfgq-tze8b8
# SGTIN: 3014-f711-a000-19db-e994-3030
# siehe: https://community.home-assistant.io/t/homematic-switch-hmip-wrc2/39242/9
#        https://www.home-assistant.io/integrations/homematic/#devices-with-buttons
#        https://community.home-assistant.io/t/problem-connecting-to-homematic-hmip-brc2-switch/199078

################################################
##  Customize
################################################
homeassistant:
  customize:
  # definitions
    package.node_anchors:
      common: &common
        package: "homematic"
      temperature: &temperature
        unit_of_measurement: "°C"
        <<: *common
      actor: &actor
        <<: *common
      valve: &valve
        unit_of_measurement: "%"
        <<: *common
  # sensors
    sensor.hm_thermo_wz_target_temp:
      <<: *temperature
    sensor.hm_thermo_wz_actor_value:
      <<: *actor
    sensor.hm_thermo_wz_actor_state:
      <<: *actor
    sensor.hm_thermo_wz_window_state:
      <<: *common
    sensor.hm_thermo_wz_active_profile:
      <<: *common
    sensor.hm_thermo_wz_actor_value_graph:
      <<: *common
  
    sensor.hm_thermo_ku_target_temp:
      <<: *temperature
    sensor.hm_thermo_ku_actor_value_graph:
      <<: *valve
    sensor.hm_thermo_ku_window_state:
      <<: *common
    sensor.hm_thermo_ku_active_profile:
      <<: *common
  
    sensor.hm_thermo_gz_target_temp:
      <<: *temperature
    sensor.hm_thermo_gz_actor_value_graph:
      <<: *valve
    sensor.hm_thermo_gz_window_state:
      <<: *common
    sensor.hm_thermo_gz_active_profile:
      <<: *common

    binary_sensor.hm_homematic_up:
      <<: *common
  # automations
    automation.homematic_reconnect:
      <<: *common

################################################
##   Platforms
################################################
#  switched to custom integration 2023.07
#  Homematic CCU
# homematic:
#   interfaces:
#     hmip:
#       host: !secret homematic_hmip_host
#       port: 2010
#       username: !secret homematic_hmip_adminusername
#       password: !secret homematic_hmip_adminpassword
#       resolvenames: false
#   hosts:
#     raspi_ccu:
#       host: !secret homematic_hmip_host
#       username: !secret homematic_hmip_adminusername
#       password: !secret homematic_hmip_adminpassword

###############################################################################
##  Sensors
###############################################################################
#todo: pivccu_v_wochenprofil_* und die dahinterliegenden Variablen in der piVCCU sind um 1 höher als das Profil.
#todo: die MAP in sensor.hm_thermo_wz_active_profile global definieren. wie?

template:
  - sensor:
    # ---------------------
    # Thermostat Wohnzimmer
    - unique_id: hm_thermo_wz_target_temp
      name: hm_thermo_wz_target_temp
      state: "{{ state_attr('climate.wandthermostat_wz','temperature') | float(default=0) }}"
      unit_of_measurement: '°C'
      state_class: measurement #to be included in long-term statistics
      icon: mdi:thermostat
      attributes:
        friendly_name: Wohnzimmer Soll-Temperatur
    - unique_id: hm_thermo_wz_actor_value 
      name: hm_thermo_wz_actor_value
      state: "{{ 100 if (states('binary_sensor.wandthermostat_wz_ch9') == 'on') else 0 }}"
      unit_of_measurement: '%'
      state_class: measurement #to be included in long-term statistics
      icon: mdi:valve
      attributes:
        friendly_name: Wohnzimmer Heizungsventilöffnung
        description: Konvertiert den on/off Sensor der HmIP Integration in einen Prozentwert (0%/100%) für Berechnungen
    # Sensoren für die Oberfläche (lovelace)
    - unique_id: hm_thermo_wz_actor_state #for simple-thermostat card
      name: hm_thermo_wz_actor_state
      state: >-
        {%- if states('binary_sensor.wandthermostat_wz_ch9') == 'off' -%}
        zu
        {%- elif states('binary_sensor.wandthermostat_wz_ch9') == 'on' -%}
        offen
        {%- else -%}
        {{ states('binary_sensor.wandthermostat_wz_ch9') }}
        {%- endif -%}
      icon: mdi:valve
      attributes:
        friendly_name: Wohnzimmer Heizungsventile
        description: Konvertiert den on/off Sensor der HmIP Integration in deutsche Sprache für die 'simple-thermostat' Card
    - unique_id: hm_thermo_wz_actor_value_graph #for mini-graph card
      name: hm_thermo_wz_actor_value_graph
      state: >-
        {%- if is_state('binary_sensor.wandthermostat_wz_ch9','off') -%}
          {%- if is_state('input_boolean.heating_period','on') -%}
        0
          {%- else -%}
        -5
          {%- endif -%}
        {%- elif is_state('binary_sensor.wandthermostat_wz_ch9','on') -%}
        40
        {%- endif -%}
      icon: mdi:valve
      attributes:
        friendly_name: Wohnzimmer Heizventile
        description: Konvertiert den on/off Sensor der HmIP Integration in einen numerischen Wert für die 'mini-graph' Card
    - unique_id: hm_thermo_wz_window_state #for simple-thermostat card
      name: hm_thermo_wz_window_state
      state: >-
        {%- if is_state('sensor.pivccu_v_fensteroffen_wz','0') -%}
        zu
        {%- elif is_state('sensor.pivccu_v_fensteroffen_wz','1') -%} 
        offen
        {%- else -%}
        {{ states('sensor.pivccu_v_fensteroffen_wz') }}
        {%- endif -%}
      icon: "{% if is_state('sensor.pivccu_v_fensteroffen_wz','0') %} mdi:window-closed-variant {% else %} mdi:window-open-variant {% endif %}"
      attributes:
        friendly_name: Fensterstatus Wohnzimmerthermostat
        description: Konvertiert die 0/1 Variable aus der Homematic CCU in deutsche Sprache für die 'simple-thermostat' Card
    - unique_id: hm_thermo_wz_active_profile #for simple-thermostat card
      name: hm_thermo_wz_active_profile
      state: >-
        {% set profile_map = {
          2: '1 - Work (def)',
          3: '2 - Homeoffice',
          4: '3 - Gäste' }
        %}
        {%- if is_state('sensor.pivccu_v_wochenprofil_wz','False') -%}
        unbekannt
        {%- else -%}
        {{ profile_map[states('sensor.pivccu_v_wochenprofil_wz')|int(0)] }}
        {%- endif -%}
      attributes:
        friendly_name: Heizprofil Wohnzimmerthermostat
        description: Konvertiert die Variable aus der Homematic CCU in eine Beschreibung für die 'simple-thermostat' Card

    # ---------------------
    # Küche
    - unique_id: hm_thermo_ku_target_temp
      name: hm_thermo_ku_target_temp
      state: "{{ state_attr('climate.heizungsthermostat_ku','temperature') | float(default=0) }}"
      unit_of_measurement: '°C'
      state_class: measurement #to be included in long-term statistics
      icon: mdi:thermostat
      attributes:
        friendly_name: "Küche Soll-Temperatur" 
    # Sensoren für die Oberfläche (lovelace)
    - unique_id: hm_thermo_ku_actor_value_graph #for mini-graph card
      name: hm_thermo_ku_actor_value_graph
      state: "{{ -5 if (is_state('input_boolean.heating_period','off') and states('sensor.heizungsthermostat_ku_level')|float(default=0)==0) else states('sensor.heizungsthermostat_ku_level')|float(default=0)/100*40 }}"
      icon: mdi:valve
      attributes:
        friendly_name: Küche Ventilöffnung
        description: Konvertiert den Sensor der HmIP Integration in einen numerischen Wert für die 'mini-graph' Card
    - unique_id: hm_thermo_ku_window_state #for simple-thermostat card
      name: hm_thermo_ku_window_state
      state: >-
        {%- if is_state('sensor.pivccu_v_fensteroffen_ku','0') -%}
        zu
        {%- elif is_state('sensor.pivccu_v_fensteroffen_ku','1') -%} 
        offen
        {%- else -%}
        {{ states('sensor.pivccu_v_fensteroffen_ku') }}
        {%- endif -%}
      icon: "{% if is_state('sensor.pivccu_v_fensteroffen_ku','0') %} mdi:window-closed-variant {% else %} mdi:window-open-variant {% endif %}"
      attributes:
        friendly_name: Fensterstatus Küchenthermostat
        description: Konvertiert die 0/1 Variable aus der Homematic CCU in deutsche Sprache für die 'simple-thermostat' Card
    - unique_id: hm_thermo_ku_active_profile #for simple-thermostat card
      name: hm_thermo_ku_active_profile
      state: >-
        {% set profile_map = {
          2: '1 - Work (def)',
          3: '2 - Homeoffice',
          4: '3 - Gäste' }
        %}
        {%- if is_state('sensor.pivccu_v_wochenprofil_ku','False') -%}
        unbekannt
        {%- else -%}
        {{ profile_map[states('sensor.pivccu_v_wochenprofil_ku')|int(0)] }}
        {%- endif -%}
      attributes:
        friendly_name: Heizprofil Küchenthermostat
        description: Konvertiert die Variable aus der Homematic CCU in eine Beschreibung für die 'simple-thermostat' Card

    # ---------------------
    # Gästezimmer
    - unique_id: hm_thermo_gz_target_temp
      name: hm_thermo_gz_target_temp
      state: "{{ state_attr('climate.heizungsthermostat_gz','temperature') | float(default=0) }}"
      unit_of_measurement: '°C'
      state_class: measurement #to be included in long-term statistics
      icon: mdi:thermostat
      attributes:
        friendly_name: "Gästezimmer Soll-Temperatur" 
    # Sensoren für die Oberfläche (lovelace)
    - unique_id: hm_thermo_gz_actor_value_graph #for mini-graph card
      name: hm_thermo_gz_actor_value_graph
      state: "{{ -5 if (is_state('input_boolean.heating_period','off') and states('sensor.heizungsthermostat_gz_level')|float(default=0)==0) else states('sensor.heizungsthermostat_gz_level')|float(default=0)/100*40 }}"
      icon: mdi:valve
      attributes:
        friendly_name: Gästezimmer Ventilöffnung
        description: Konvertiert den Sensor der HmIP Integration in einen numerischen Wert für die 'mini-graph' Card
    - unique_id: hm_thermo_gz_window_state #for simple-thermostat card
      name: hm_thermo_gz_window_state
      state: >-
        {%- if is_state('sensor.pivccu_v_fensteroffen_gz','0') -%}
        zu
        {%- elif is_state('sensor.pivccu_v_fensteroffen_gz','1') -%} 
        offen
        {%- else -%}
        {{ states('sensor.pivccu_v_fensteroffen_gz') }}
        {%- endif -%}
      icon: "{% if is_state('sensor.pivccu_v_fensteroffen_gz','0') %} mdi:window-closed-variant {% else %} mdi:window-open-variant {% endif %}"
      attributes:
        friendly_name: Fensterstatus Gästethermostat
        description: Konvertiert die 0/1 Variable aus der Homematic CCU in deutsche Sprache für die 'simple-thermostat' Card
    - unique_id: hm_thermo_gz_active_profile #for simple-thermostat card
      name: hm_thermo_gz_active_profile
      state: >-
        {% set profile_map = {
          2: '1 - Work (def)',
          3: '2 - Homeoffice',
          4: '3 - Gäste' }
        %}
        {%- if is_state('sensor.pivccu_v_wochenprofil_gz','False') -%}
        unbekannt
        {%- else -%}
        {{ profile_map[states('sensor.pivccu_v_wochenprofil_gz')|int(0)] }}
        {%- endif -%}
      attributes:
        friendly_name: Heizprofil Gästethermostat
        description: Konvertiert die Variable aus der Homematic CCU in eine Beschreibung für die 'simple-thermostat' Card

binary_sensor: 
  - platform: template
    sensors:
      hm_homematic_up:
        unique_id: hm_homematic_up
        friendly_name: "Homematic is sending updates"
        # Time based template: see https://www.home-assistant.io/integrations/binary_sensor.template/#working-without-entities
        # 'last_changed' is only accessible through states-object. see: https://community.home-assistant.io/t/last-updated-state-and-last-changed-in-lovelave/101701
        #  --> states.sensor.hm_thermo_wz_current_temp.last_changed NOT states_attr(..)
        value_template: >-
          {% set dummy = states('sensor.time') %}
          {{ (as_timestamp(now()) - as_timestamp(states.sensor.wandthermostat_wz_temperatur.last_changed)) < 3600 }}


###############################################################################
##  Automations
###############################################################################
# automation:
#   # Reconnect to CCU, if sensor has not been updated for over 1 hour or ccu rebooted
#   - alias: Homematic Reconnect
#     id: reconnect_homematic
#     triggers:
#       - trigger: state
#         entity_id: binary_sensor.hm_homematic_up
#         to: "off"
#       - trigger: state
#         entity_id: sensor.hm_ccu_last_reboot
#     actions:
#       action: homematic.reconnect
