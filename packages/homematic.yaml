###############################################################################
#   @author       : Max Reigl
#   @date         : 29.01.2020
#   @package      : homematic
#   @description  : 
#   @links        : 
###############################################################################
# Parameter Wandthermostat WZ
#  ch 0: 
#    Zyklische Statusmeldung: true
#    Anzahl der auszulassenden Statusmeldungen: 1
#    Anzahl der auszulassenden unveränderten Statusmeldungen: 1
#  ch 1:
#    Minimale Temperatur: AUS
#    Maximale Temperatur: EIN
#    Temperatur-Offset: -0.5
#  ch 5:
#    Art der Zweipunktregelung: Heizen
#    Hysterese: 0.40
#  ch 8:
#    Kühlen im Kühlmode: Nicht aktiv
#    Heizen im Heizmode: Aktiv
#    Art/Typ der Anlage: Radiator
#    Art des Raumes: Standard Raum
#    Ventiltyp: NC
#    Intervall der Entkalkungsfahrt bei Nichtbenutzung: 14 Tage

#----------------------------------------------------------------------------------
# HmIP-Thermostate Ist-Temperatur
#   GZ: ohne Heizung ok, während Heizen ca. +1°C
#----------------------------------------------------------------------------------
# HmIP-BRC2 Wandtaster wird nicht als entity nach HA exportiert, da er keinen Status hat.
# in Hm-CCU wurden 2 "pseudo"-Programme angelegt, um den Tastendruck an HA zu senden.
# ID für HmIP-BRC2 wurde über das logging ermittelt.
# Key:   6uk95-ykbw7-wb51f-9xfgq-tze8b8
# SGTIN: 3014-f711-a000-19db-e994-3030
# siehe: https://community.home-assistant.io/t/homematic-switch-hmip-wrc2/39242/9
#        https://www.home-assistant.io/integrations/homematic/#devices-with-buttons
#        https://community.home-assistant.io/t/problem-connecting-to-homematic-hmip-brc2-switch/199078

################################################
##  Customize
################################################
homeassistant:
  customize:
  # definitions
    package.node_anchors:
      common: &common
        package: "homematic"
      temperature: &temperature
        unit_of_measurement: "°C"
        <<: *common
      actor: &actor
        <<: *common
      valve: &valve
        unit_of_measurement: "%"
        <<: *common
        #icon_template: "mdi:valve"  #geht nicht
  # sensors
    sensor.hm_thermo_wz_current_temp:
      <<: *temperature
    sensor.hm_thermo_wz_target_temp:
      <<: *temperature
    sensor.hm_thermo_wz_actor_state:
      <<: *actor
    sensor.hm_thermo_wz_actor_value:
      <<: *actor
    sensor.hm_thermo_wz_window_state:
      <<: *common

    sensor.hm_thermo_ku_current_temp:
      <<: *temperature
    sensor.hm_thermo_ku_target_temp:
      <<: *temperature
    sensor.hm_thermo_ku_valve_status:
      <<: *actor
    sensor.hm_thermo_ku_actor_value:
      <<: *valve
    sensor.hm_thermo_ku_actor_display:
      <<: *valve
    sensor.hm_thermo_ku_window_state:
      <<: *common

    sensor.hm_thermo_gz_current_temp:
      <<: *temperature
    sensor.hm_thermo_gz_target_temp:
      <<: *temperature
    sensor.hm_thermo_gz_valve_status:
      <<: *actor
    sensor.hm_thermo_gz_actor_value:
      <<: *valve
    sensor.hm_thermo_gz_actor_display:
      <<: *valve
    sensor.hm_thermo_gz_window_state:
      <<: *common
    sensor.hm_thermo_gz_active_profile:
      <<: *common

    sensor.hm_ccu_last_reboot:
      <<: *common
    binary_sensor.hm_homematic_up:
      <<: *common
  # automations
    automation.homematic_reconnect:
      <<: *common

################################################
##   Platforms
################################################
# Homematic CCU
homematic:
  interfaces:
    hmip:
      host: !secret homematic_hmip_host
      port: 2010
      username: !secret homematic_hmip_adminusername
      password: !secret homematic_hmip_adminpassword
      resolvenames: false
#deactivated until at least one group is defined. 
#Otherwise '[pyhomematic._hm] Failed to initialize proxy' error shows up in log.
#    hmip_groups:
#      host: !secret homematic_hmip_host
#      port: 9292 # 39292 mit SSL?
#      username: !secret homematic_hmip_guestusername
#      password: !secret homematic_hmip_guestpassword
#      path: /groups
#      resolvenames: json
  hosts:
    raspi_ccu:
      host: !secret homematic_hmip_host
      username: !secret homematic_hmip_adminusername
      password: !secret homematic_hmip_adminpassword

###############################################################################
##  Sensors
###############################################################################
sensor:
  # Thermostat Wohnzimmer
  - platform: template
    sensors:
    # Wohnzimmer
      hm_thermo_wz_current_temp:
        value_template: "{{state_attr('climate.000c9a499b5808','current_temperature')|float}}"
        friendly_name: "Wohnzimmer Ist-Temperatur"
      hm_thermo_wz_target_temp:
        value_template: "{{state_attr('climate.000c9a499b5808','temperature')|float}}"
        friendly_name: "Wohnzimmer Soll-Temperatur"
      hm_thermo_wz_actor_state:
        value_template: "{%if state_attr('homematic.raspi_ccu', 'V_Schaltaktor_WZ') == False %}zu{% elif state_attr('homematic.raspi_ccu', 'V_Schaltaktor_WZ') == True %}offen{% else %}{{state_attr('homematic.raspi_ccu', 'V_Schaltaktor_WZ')}}{% endif %}"
        friendly_name: "Wohnzimmer Heizungsventile"
        icon_template: "mdi:valve"
      hm_thermo_wz_actor_value: #for mini-graph
        friendly_name: "Wohnzimmer Heizventile"
        value_template: >-
          {%if state_attr('homematic.raspi_ccu', 'V_Schaltaktor_WZ') == False %}
            {%if is_state('input_boolean.heating_period','on') %}
          0
            {% else %}
          -5
            {% endif %}
          {% elif state_attr('homematic.raspi_ccu', 'V_Schaltaktor_WZ') == True %}
          20
          {% endif %}
        icon_template: "mdi:valve"
      hm_thermo_wz_window_state:
        value_template: "{%if state_attr('homematic.raspi_ccu', 'V_Fensteroffen_WZ') == False %}zu{% elif state_attr('homematic.raspi_ccu', 'V_Fensteroffen_WZ') == True %}offen{% else %}{{state_attr('homematic.raspi_ccu', 'V_Fensteroffen_WZ')}}{% endif %}"
        icon_template: "{%if state_attr('homematic.raspi_ccu', 'V_Fensteroffen_WZ') == False %} mdi:window-closed-variant {% elif state_attr('homematic.raspi_ccu', 'V_Fensteroffen_WZ') == True %} mdi:window-open-variant {% endif %}"
        friendly_name: "Fensterstatus Wohnzimmerthermostat"
      # Küche
      hm_thermo_ku_current_temp:
        value_template: "{{state_attr('climate.000a1a49a10ba3','current_temperature')|float}}"
        friendly_name: "Küche Ist-Temperatur"
      hm_thermo_ku_target_temp:
        value_template: "{{state_attr('climate.000a1a49a10ba3','temperature')|float}}"
        friendly_name: "Küche Soll-Temperatur"
      hm_thermo_ku_valve_status:
        #Status Adaptierfahrt. 4=ADAPTION_DONE
        value_template: "{{state_attr('climate.000a1a49a10ba3','valve')|int}}"
        friendly_name: "Küche Ventilstatus"
        icon_template: "mdi:valve"
      hm_thermo_ku_actor_value:
        value_template: "{{(state_attr('climate.000a1a49a10ba3','level')|float*100)|int}}"
        friendly_name: "Küche Ventilöffnung"
        icon_template: "mdi:valve"
      hm_thermo_ku_actor_display:  #for mini-graph
        value_template: "{{ -5 if (is_state('input_boolean.heating_period','off') and state_attr('climate.000a1a49a10ba3','level')|float==0) else state_attr('climate.000a1a49a10ba3','level')|float*20 }}"
                       #"{{state_attr('climate.000a1a49a10ba3','level')|float*20}}"
        friendly_name: "Küche Ventilöffnung"
        icon_template: "mdi:valve"
      hm_thermo_ku_window_state:
        value_template: "{%if state_attr('homematic.raspi_ccu', 'V_Fensteroffen_KU') == False %}zu{% elif state_attr('homematic.raspi_ccu', 'V_Fensteroffen_KU') == True %}offen{% else %}{{state_attr('homematic.raspi_ccu', 'V_Fensteroffen_KU')}}{% endif %}"
        icon_template: "{%if state_attr('homematic.raspi_ccu', 'V_Fensteroffen_KU') == False %} mdi:window-closed-variant {% elif state_attr('homematic.raspi_ccu', 'V_Fensteroffen_KU') == True %} mdi:window-open-variant {% endif %}"
        friendly_name: "Fensterstatus Küchenthermostat"
      hm_thermo_ku_active_profile:
        value_template: "{%if state_attr('homematic.raspi_ccu', 'V_Wochenprofil_KU') == False %}0{% else %}{{state_attr('homematic.raspi_ccu', 'V_Wochenprofil_KU')}}{% endif %}"
        friendly_name: "Heizprofil Küchenthermostat"
      # Gästezimmer
      hm_thermo_gz_current_temp:
        value_template: "{{state_attr('climate.000a1a49a107b5','current_temperature')|float}}"
        friendly_name: "Gästezimmer Ist-Temperatur"
      hm_thermo_gz_target_temp:
        value_template: "{{state_attr('climate.000a1a49a107b5','temperature')|float}}"
        friendly_name: "Gästezimmer Soll-Temperatur"
      hm_thermo_gz_valve_status:
        #Status Adaptierfahrt. 4=ADAPTION_DONE
        value_template: "{{state_attr('climate.000a1a49a107b5','valve')|int}}"
        friendly_name: "Gästezimmer Ventilstatus"
        icon_template: "mdi:valve"
      hm_thermo_gz_actor_value:
        value_template: "{{(state_attr('climate.000a1a49a107b5','level')|float*100)|int}}"
        friendly_name: "Gästezimmer Ventilöffnung"
        icon_template: "mdi:valve"
      hm_thermo_gz_actor_display:  #for mini-graph
        value_template: "{{ -5 if (is_state('input_boolean.heating_period','off') and state_attr('climate.000a1a49a107b5','level')|float==0) else state_attr('climate.000a1a49a107b5','level')|float*20 }}"
                      # "{{state_attr('climate.000a1a49a107b5','level')|float*20}}"
        friendly_name: "Gästezimmer Ventilöffnung"
        icon_template: "mdi:valve"
      hm_thermo_gz_window_state:
        value_template: "{%if state_attr('homematic.raspi_ccu', 'V_Fensteroffen_GZ') == False %}zu{% elif state_attr('homematic.raspi_ccu', 'V_Fensteroffen_GZ') == True %}offen{% else %}{{state_attr('homematic.raspi_ccu', 'V_Fensteroffen_GZ')}}{% endif %}"
        icon_template: "{%if state_attr('homematic.raspi_ccu', 'V_Fensteroffen_GZ') == False %} mdi:window-closed-variant {% elif state_attr('homematic.raspi_ccu', 'V_Fensteroffen_GZ') == True %} mdi:window-open-variant {% endif %}"
        friendly_name: "Fensterstatus Gästethermostat"
      hm_thermo_gz_active_profile:
        value_template: "{%if state_attr('homematic.raspi_ccu', 'V_Wochenprofil_GZ') == False %}0{% else %}{{state_attr('homematic.raspi_ccu', 'V_Wochenprofil_GZ')}}{% endif %}"
        friendly_name: "Heizprofil Gästethermostat"
    # CCU
  - platform: template
    sensors:
      hm_ccu_last_reboot:
        value_template: "{{ state_attr('homematic.raspi_ccu', 'V_Last_Reboot') or '01.01.1970 00:00:00' }}"
        icon_template: "mdi:clock"
      
binary_sensor:
  - platform: template
    sensors:
      hm_homematic_up:
        friendly_name: "Homematic is sending updates"
        # Time based template: see https://www.home-assistant.io/integrations/binary_sensor.template/#working-without-entities
        value_template: >-
          {% set dummy = states('sensor.time') %}
          {{as_timestamp(now()) - as_timestamp(states.sensor.hm_thermo_wz_current_temp.last_changed) < 3600}}


###############################################################################
##  Automations
###############################################################################
automation:
  # Reconnect to CCU, if sensor has not been updated for over 1 hour or ccu rebooted
  - alias: Homematic Reconnect
    trigger:
      - platform: state
        entity_id: binary_sensor.hm_homematic_up
        to: "off"
      - platform: state
        entity_id: sensor.hm_ccu_last_reboot
    action:
      service: homematic.reconnect