###############################################################################
#   @author       : Max Reigl
#   @date         : 28.10.2019
#   @package      : presence_detection
#   @description  : Presence Detection with different states
#   @links        : 
# Idea: https://philhawthorne.com/making-home-assistants-presence-detection-not-so-binary/
# evtl noch einbauen: https://www.home-assistant.io/components/bayesian/
# todo: BTLE: https://community.home-assistant.io/t/monitor-reliable-multi-user-distributed-bluetooth-occupancy-presence-detection/68505
# Group als trigger: https://community.home-assistant.io/t/automation-trigger-on-any-member-of-a-group-is-it-possible/55795
###############################################################################

# pictures for persons and new icons for device entities
homeassistant:
  customize: 
    sensor.max_status:
      entity_picture: /local/max.jpg # /local/* --> ./config/www/*
    sensor.ing_status:
      entity_picture: /local/ing.jpg
    device_tracker.iphone8_max_wifi:
      icon: mdi:cellphone-wireless
    device_tracker.iphone8_ing_wifi:
      icon: mdi:cellphone-wireless
    device_tracker.iphone8_max_bt:
      icon: mdi:bluetooth-audio
    device_tracker.iphone8_ing_bt:
      icon: mdi:bluetooth-audio

group:
  # 'group.family_status' wird durch eine group-card im UI angezeigt. 
  family_status:
    name: Family Status
    control: hidden
    entities:
      - sensor.max_status
      - sensor.ing_status
      - input_boolean.guests
      # - sensor.n_people_home
      - sensor.home_status
  # group.phone_* dient zum zentralen Setzen des aktuell zu prüfenden Devices pro Person.
  #   Werden mehrere Geräte angegeben, dann ist Gruppe 'on'='anwesend' wenn mindestens ein Gerät 'on' ist.
  phone_max:
    name: Phone Max
    control: hidden
    entities:
      - device_tracker.iphone8_max_wifi
      - device_tracker.iphone8_max_bt
  phone_ing:
    name: Phone Ingrid
    control: hidden
    entities:
      - device_tracker.iphone8_ing_wifi
      - device_tracker.iphone8_ing_bt
 
# mögliche Statuswerte für Personen und den Gesamtstatus 'sensor.home_status'
input_select:
  max_status_dropdown:
    name: Max
    options:
      - Home
      - Just Arrived
      - Just Left
      - Away
      - Extended Away
  ing_status_dropdown:
    name: Ingrid
    options:
      - Home
      - Just Arrived
      - Just Left
      - Away
      - Extended Away
  home_status_dropdown:
    name: Home Status
    options:
      - Home
      - Away
      - Extended Away
  
# these values are used to persistent the *_status_dropdown.last_changed, which are reset at HA reboot.
input_datetime:
  max_status_dropdown_last_changed:
    name: Max status last changed
    has_date: true
    has_time: true
  ing_status_dropdown_last_changed:
    name: Ing status last changed
    has_date: true
    has_time: true
  home_status_dropdown_last_changed:
    name: Home status last changed
    has_date: true
    has_time: true

# Manuelle Eingabe, ob Gäste in der Wohnung sind. Erhöht der Wert von 'sensor.n_people_home' um 1.
input_boolean:
  guests:
    name: Wir haben Gäste #We have guests
    icon: mdi:account-multiple
    
sensor:
  # der Status der Personen
  - platform: template
    sensors:
      max_status:
        friendly_name: 'Max'
        value_template: '{{ states.input_select.max_status_dropdown.state }}'
        entity_id:
          - input_select.max_status_dropdown
      ing_status:
        friendly_name: 'Ingrid'
        value_template: '{{ states.input_select.ing_status_dropdown.state }}'
        entity_id:
          - input_select.ing_status_dropdown
  # Anzahl der Personen zuhause
  - platform: template
    sensors:
      n_people_home:
        friendly_name: Number of People Home
        entity_id:
          # list all entities (not group) otherwise the trigger will but perform correctly
          - device_tracker.iphone8_max_wifi
          - device_tracker.iphone8_ing_wifi
          - device_tracker.iphone8_ing_bt
          - device_tracker.iphone8_max_bt    
          - input_boolean.guests
        value_template: >
          {{ (1 if states|selectattr('entity_id','in',state_attr('group.phone_max','entity_id'))
                   |selectattr('state','eq','home')|list|count > 0 else 0) + 
             (1 if states|selectattr('entity_id','in',state_attr('group.phone_ing','entity_id'))
                   |selectattr('state','eq','home')|list|count > 0 else 0) +
             (1 if is_state('input_boolean.guests','on') else 0) }}
  # Gesamtstatus: ist jemand zuhause
  - platform: template
    sensors:
      home_status:
        value_template: '{{ states.input_select.home_status_dropdown.state }}'
        friendly_name: 'Home Presence Status'
        entity_id: input_select.home_status_dropdown
        icon_template: mdi:home-account #account-supervisor-circle oder account-search
          #account-supervisor-circle oder account-search


automation:
  # save the time a status was changed last, because these values will be reset every time HA isrebooted
  - alias: Person-Status last changed date and time
    trigger:
      platform: state
      entity_id: input_select.max_status_dropdown, input_select.ing_status_dropdown, input_select.home_status_dropdown
    action:
      - service: input_datetime.set_datetime
        data_template:
          entity_id: input_datetime.{{ trigger.entity_id[13:] }}_last_changed
          time: '{{ (as_timestamp(now()) | timestamp_custom("%H:%M:%S", true)) }}'
          date: '{{ (as_timestamp(now()) | timestamp_custom("%Y-%m-%d", true)) }}'

# if a device_tracker changed while HA was offline, we have to correct the input_select.*_status_dropdown after restart.
# We also do that once a day (02:00 at night) in case a trigger was missed.
# Becasue *.last_changed value is reset to boot time, we use a persistent variable 'input_datetime.*_status_dropdown_last_changed'.
  - alias: Person- and Home-Status correction
    trigger: 
      - platform: homeassistant
        event: start
      - platform: time_pattern
        hours: "2"
    action:
      - delay: '00:00:30'
      - service: input_select.select_option
        data_template:
          entity_id: input_select.max_status_dropdown
          option: >
           {% if is_state('group.phone_max','home') %}
              {% if states.input_select.max_status_dropdown.state in ['Just Arrived','Just Left'] %}
                Home
              {% elif states.input_select.max_status_dropdown.state in ['Away', 'Extended Away'] %}
                Just Arrived
              {% else %}
                Home
              {% endif %}
            {% else %} 
              {% if states.input_select.max_status_dropdown.state in ['Just Left'] %}
                Away
              {% elif states.input_select.max_status_dropdown.state in ['Home', 'Just Arrived'] %}
                Just Left
              {% elif (states.input_select.max_status_dropdown.state in ['Away']) and 
                      (((as_timestamp(now()) - as_timestamp(states.input_datetime.max_status_dropdown_last_changed.state))/3600) | int >=24) %}
                Extended Away
              {% elif states.input_select.max_status_dropdown.state in ['Extended Away'] %}
                Extended Away
              {% else %}
                Away
              {% endif %}
            {% endif %}
      - service: input_select.select_option
        data_template:
          entity_id: input_select.ing_status_dropdown
          option: >
            {% if is_state('group.phone_ing','home') %}
              {% if states.input_select.ing_status_dropdown.state in ['Just Arrived','Just Left'] %}
                Home
              {% elif states.input_select.ing_status_dropdown.state in ['Away', 'Extended Away'] %}
                Just Arrived
              {% else %}
                Home
              {% endif %}
            {% else %} 
              {% if states.input_select.ing_status_dropdown.state in ['Just Left'] %}
                Away
              {% elif states.input_select.ing_status_dropdown.state in ['Home', 'Just Arrived'] %}
                Just Left
              {% elif (states.input_select.ing_status_dropdown.state in ['Away']) and 
                      (((as_timestamp(now()) - as_timestamp(states.input_datetime.ing_status_dropdown_last_changed.state))/3600) | int >=24) %}
                Extended Away
              {% elif states.input_select.ing_status_dropdown.state in ['Extended Away'] %}
                Extended Away
              {% else %}
                Away
              {% endif %}
            {% endif %}
      - service: input_select.select_option
        data_template:
          entity_id: input_select.home_status_dropdown
          option: >
            {% if is_state('input_select.home_status_dropdown','Home') %}
              Home
            {% else %} 
              {% if (((as_timestamp(now()) - as_timestamp(states.input_datetime.home_status_dropdown_last_changed.state))/3600) | int >=24) %}
                Extended Away
              {% else %}
                Away
              {% endif %}
            {% endif %}


# STATUS-Übergänge Personen
#
#         /-----------------------------------------------[10min]------------------------------------------------\
#        |                                                                                                        |
#        |                                                               /--------[DeviceTracker: home]------\    |
#        |                                                              |                                     |   |
#        V                                                              V                                     |   |
#       Away  --[DeviceTracker: home]-->  Just Arrived  --[10min]-->  Home  --[DeviceTracker: not_home]-->  Just Left
#        |                                    A   |                                                             A
#      [24h]                                  |   |                                                             |
#        V                                    |   \---------------------------[DeviceTracker: not_home]---------´ 
#   Extended Away  ---[DeviceTracker: home]---/
#
  - alias: Mark person as just arrived
    trigger:
      - platform: state
        entity_id: group.phone_max 
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: group.phone_ing
        from: 'not_home'
        to: 'home'
    action:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'group.phone_max' %}
              input_select.max_status_dropdown
            {% else %}
              input_select.ing_status_dropdown
            {% endif %}
          option: >
            {% if trigger.entity_id == 'group.phone_max' %}
              {% if states.input_select.max_status_dropdown.state == 'Just Left' %}
                Home
              {% else %}
                Just Arrived
              {% endif %}
            {% else %}
              {% if states.input_select.ing_status_dropdown.state == 'Just Left' %}
                Home
              {% else %}
                Just Arrived
              {% endif %}
            {% endif %}
  
  - alias: Mark person as just left
    trigger:
      - platform: state
        entity_id: group.phone_max #device_tracker.iphone8_max_wifi
        from: 'home'
        to: 'not_home'
      - platform: state
        entity_id: group.phone_ing #device_tracker.iphone8_ing_wifi
        from: 'home'
        to: 'not_home'
    action:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'group.phone_max' %}
              input_select.max_status_dropdown
            {% else %}
              input_select.ing_status_dropdown
            {% endif %}
          option: Just Left
  
  - alias: Mark person as home #('Just Arrived' vor 10min) oder ('Just Arrived' nach 'Just Left')
    trigger:
      - platform: state
        entity_id: input_select.max_status_dropdown
        to: 'Just Arrived'
        for:
          minutes: 10
      - platform: state
        entity_id: input_select.ing_status_dropdown
        to: 'Just Arrived'
        for:
          minutes: 10
      - platform: state
        entity_id: input_select.max_status_dropdown
        from: 'Just Left'
        to: 'Just Arrived'
      - platform: state
        entity_id: input_select.ing_status_dropdown
        from: 'Just Left'
        to: 'Just Arrived'
    action:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'input_select.max_status_dropdown' %}
              input_select.max_status_dropdown
            {% else %}
              input_select.ing_status_dropdown
            {% endif %}
          option: Home
  
  - alias: Mark person as away  #('Just Left' vor 10min) 
    trigger:
      - platform: state
        entity_id: input_select.max_status_dropdown
        to: 'Just Left'
        for:
          minutes: 10
      - platform: state
        entity_id: input_select.ing_status_dropdown
        to: 'Just Left'
        for:
          minutes: 10
    action:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'input_select.max_status_dropdown' %}
              input_select.max_status_dropdown
            {% else %}
              input_select.ing_status_dropdown
            {% endif %}
          option: Away
  
  - alias: Mark person as extended away  #('Away' für 24h) 
    trigger:
      - platform: state
        entity_id: input_select.max_status_dropdown
        to: 'Away'
        for:
          hours: 24
      - platform: state
        entity_id: input_select.ing_status_dropdown
        to: 'Away'
        for:
          hours: 24
    action:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'input_select.max_status_dropdown' %}
              input_select.max_status_dropdown
            {% else %}
              input_select.ing_status_dropdown
            {% endif %}
          option: Extended Away


# STATUS-Übergänge Home
#
#        /-------[n_people_home <1]--------\
#        |                                  |
#        V                                  |
#       Away  ---[n_people_home >0]---->  Home
#        |                                  A
#      [24h]                                |
#        V                                  |
#   Extended Away  ---[n_people_home >0]---/
#
  - alias: Home Status - Leaving
    trigger:
      platform: numeric_state
      entity_id: sensor.n_people_home
      below: 1
    condition:
      condition: state
      entity_id: input_select.home_status_dropdown
      state: Home
    action:
      service: input_select.select_option
      entity_id: input_select.home_status_dropdown
      data:
        option: Away

  - alias: Home Status - Arriving
    trigger:
      platform: state
      entity_id: sensor.n_people_home
    condition:
      condition: template
      value_template: >
        {{ trigger.to_state.state|int > trigger.from_state.state|int }}
    action:
      service: input_select.select_option
      entity_id: input_select.home_status_dropdown
      data:
        option: Home

  - alias: Home Status - Vacation  #('Away' für 24h) 
    trigger:
      platform: state
      entity_id: input_select.home_status_dropdown
      to: 'Away'
      for:
        hours: 24
    action:
      service: input_select.select_option
      entity_id: input_select.home_status_dropdown
      data:
        option: Extended Away
