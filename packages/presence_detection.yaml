###############################################################################
#   @author       : Max Reigl
#   @date         : 08.08.2020
#   @package      : presence_detection
#   @description  : Presence Detection with different states
#   @links        : 
# States: https://philhawthorne.com/making-home-assistants-presence-detection-not-so-binary/
# BTLE (Monitor.sh): https://community.home-assistant.io/t/monitor-reliable-multi-user-distributed-bluetooth-occupancy-presence-detection/68505
#                    https://github.com/andrewjfreyer/monitor
# Group als trigger: https://community.home-assistant.io/t/automation-trigger-on-any-member-of-a-group-is-it-possible/55795
###############################################################################

################################################
##  Customize
################################################
homeassistant:
  customize:
  # definitions
    package.node_anchors:
      common: &common
        package: "presence_detection"
      device_wifi: &device_wifi
        icon: mdi:cellphone-wireless
        <<: *common
      device_bluetooth: &device_bt
        icon: mdi:bluetooth-audio
        <<: *common
  # constants
      # timespans for presence status shifts 
      #   (Attention: automation.person_and_home_status_correction does not use these values)
      int_minutes_after_being_home: &int_minutes_after_being_home 10 #default: 10
      int_minutes_after_being_away: &int_minutes_after_being_away 10 #default: 10
      int_hours_after_being_extendedaway: &int_hours_after_being_extendedaway 24 #default: 24
      int_minutes_after_being_extendedaway: &int_minutes_after_being_extendedaway 0 #default: 0
      # confidence threshold values
      int_confidence_threshold_home: &int_confidence_threshold_home 10 #default: 10
      int_confidence_threshold_area_arrival_scan: &int_confidence_threshold_area_arrival_scan 95 #default: 95
      int_confidence_threshold_area_departure_scan: &int_confidence_threshold_area_departure_scan 10 #default: 10
  # sensors
    # pictures for persons and new icons for device entities
    sensor.max_status:
      entity_picture: /local/max.jpg # /local/* --> ./config/www/*
      <<: *common
    sensor.ing_status:
      entity_picture: /local/ing.jpg
      <<: *common
    device_tracker.iphone8_max_wifi:
      <<: *device_wifi
    device_tracker.iphone8_ing_wifi:
      <<: *device_wifi
    device_tracker.iphone8_max_bt:
      <<: *device_bt
    device_tracker.iphone8_ing_bt:
      <<: *device_bt
    sensor.max_present_e:
      <<: *common
    sensor.max_present_w:
      <<: *common
    sensor.max_home_confidence:
      <<: *common
    sensor.ing_present_e:
      <<: *common
    sensor.ing_present_w:
      <<: *common
    sensor.ing_home_confidence:
      <<: *common
    sensor.n_people_home:
      <<: *common
    sensor.home_status:
      <<: *common
  # groups, variables
    group.phone_max:
      <<: *common
    group.phone_ing:
      <<: *common
    input_select.max_status_dropdown:
      <<: *common
    input_select.ing_status_dropdown:
      <<: *common
    input_select.home_status_dropdown:
      <<: *common
    input_datetime.max_status_dropdown_last_changed:
      <<: *common
    input_datetime.ing_status_dropdown_last_changed:
      <<: *common
    input_datetime.home_status_dropdown_last_changed:
      <<: *common
    input_boolean.guests:
      <<: *common
  # automations

###############################################################################
##  Groups
###############################################################################
group:
  # group.phone_* dient zum zentralen Setzen des aktuell zu prüfenden Devices pro Person.
  #   Werden mehrere Geräte angegeben, dann ist Gruppe 'on'='anwesend' wenn mindestens ein Gerät 'on' ist.
  phone_max:
    name: Phone Max
    entities:
    # - device_tracker.iphone8_max_wifi  #fallback, if BT scripts wouldn't work anymore
      - device_tracker.iphone8_max_bt
  phone_ing:
    name: Phone Ingrid
    entities:
    # - device_tracker.iphone8_ing_wifi  #fallback, if BT scripts wouldn't work anymore
      - device_tracker.iphone8_ing_bt
 
###############################################################################
##  Variables
###############################################################################
# mögliche Statuswerte für Personen und den Gesamtstatus 'sensor.home_status'
input_select:
  max_status_dropdown:
    name: Max
    options:
      - Home
      - Just Arrived
      - Just Left
      - Away
      - Extended Away
  ing_status_dropdown:
    name: Ingrid
    options:
      - Home
      - Just Arrived
      - Just Left
      - Away
      - Extended Away
  home_status_dropdown:
    name: Home Status
    options:
      - Home
      - Away
      - Extended Away
  
# these values are used to persistent the *_status_dropdown.last_changed, which are reset at HA reboot.
input_datetime:
  max_status_dropdown_last_changed:
    name: Max status last changed
    has_date: true
    has_time: true
  ing_status_dropdown_last_changed:
    name: Ing status last changed
    has_date: true
    has_time: true
  home_status_dropdown_last_changed:
    name: Home status last changed
    has_date: true
    has_time: true

# Manuelle Eingabe, ob Gäste in der Wohnung sind. Erhöht der Wert von 'sensor.n_people_home' um 1.
input_boolean:
  guests:
    name: Wir haben Gäste #We have guests
    icon: mdi:account-multiple

#####################################################################################################################
## Structure of sensors/automations
#
# 1) monitor.sh is running on 2 raspi (east, west) and scanning for known devices using bluetooth.
#    Each area script is sending for each device a confidence value [0..100] via MQTT.
# 2) For each device 2 MQTT sensors are listening to these confidence values (sensor '<person> present {E|W}')
# 3) The 2 sensors are combined (max function) and a confidence for the device being present is calculated
#    (sensor '<person> Home Confidence'). Range [0..100].
# 4) 2 automations will set the device_tracker for the BT-device to 'home' or 'not_home'.
#    (automation '<person> Occupancy On', '<person> Occupancy Off')
# 5) The BT-device is part of the group 'phone_<person>' which could contain other devices_trackers.
#    The group is turned 'on', if at least one device in the group is 'home'.
# From this point on only the group is used in status automation triggers to be independent of devices.
# 6) 2 automations are triggered by 'group.phone_<person>' and set the 'input_select.<person>_status_dropdown' to 
#    [Just Left, Just Arrived, Home].
#    3 time triggered automations switch the status value to [Home, Away, Extended Away].
#    automations: 'Mark person as <...>'
# 7) The value of the 'input_select.<person>_status_dropdown' variable is reflected in a sensor '<person>_status'.
# HOME status
# 8) Sensor 'n_people_home' counts the persons with at least 1 device 'home' in the divice-group of this person.
#    In addition the 'input_boolean.guests' is counted with 1, if 'true'.
#    'n_people_home' >0 means someone is at home, =0 means nobody is home.
# 9) 2 automations are triggered by 'sensor.n_people_home' and set the 'input_select.home_status_dropdown' to 
#    [Away, Home].
#    1 time triggered automation switches the status value to [Extended Away].
#    automations: 'Home Status - <...>'
#10) The value of the 'input_select.home_status_dropdown' variable are reflected in a sensor 'home_status'.
#####################################################################################################################

###############################################################################
##  Sensors
###############################################################################
sensor:
# 2 raspberry pis are located in east and west part of building and are running the monitor.sh script.
# We get the BT presence confidence values via MQTT for each device which are mapped to a person here.
# Person 1
  # reading the MQTT messages from BlueTooth monitor.sh into confidence sensors for separate areas.
  - platform: mqtt
    name: 'Max present E'
    state_topic: 'monitor/ost/iphone_max_bt'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    availability_topic: "monitor/ost/status"
    payload_available: "online"
    payload_not_available: "offline"
    json_attributes_topic: 'monitor/ost/iphone_max_bt'
  - platform: mqtt
    name: 'Max present W'
    state_topic: 'monitor/west/iphone_max_bt'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    availability_topic: "monitor/west/status"
    payload_available: "online"
    payload_not_available: "offline"
    json_attributes_topic: 'monitor/west/iphone_max_bt'
  # combining all area values into a total confidence value
  - platform: min_max
    name: "Max Home Confidence"
    type: max
    round_digits: 0 #todo: not working, still shows one digit in card.
    entity_ids:
      - sensor.max_present_e
      - sensor.max_present_w
# Person 2
  # reading the MQTT messages from BlueTooth monitor.sh into confidence sensors for separate areas 
  - platform: mqtt
    name: 'Ing present E'
    state_topic: 'monitor/ost/iphone_ing_bt'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    availability_topic: "monitor/ost/status"
    payload_available: "online"
    payload_not_available: "offline"
    json_attributes_topic: 'monitor/ost/iphone_ing_bt'
  - platform: mqtt
    name: 'Ing present W'
    state_topic: 'monitor/west/iphone_ing_bt'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    availability_topic: "monitor/west/status"
    payload_available: "online"
    payload_not_available: "offline"
    json_attributes_topic: 'monitor/west/iphone_ing_bt'
  # combining all area values into a total confidence value
  - platform: min_max
    name: "Ing Home Confidence"
    type: max
    round_digits: 0
    entity_ids:
      - sensor.ing_present_e
      - sensor.ing_present_w

  # Status sensors off all persons. input_select values are set by automations.
  - platform: template
    sensors:
      max_status:
        friendly_name: 'Max'
        entity_id: input_select.max_status_dropdown
        value_template: '{{ states.input_select.max_status_dropdown.state }}'
      ing_status:
        friendly_name: 'Ingrid'
        entity_id: input_select.ing_status_dropdown
        value_template: '{{ states.input_select.ing_status_dropdown.state }}'

  # Gesamtstatus / total status of home
  - platform: template
    sensors:
    # Anzahl der Personen zuhause
      n_people_home:
        friendly_name: Number of People Home
        entity_id:
          # list all entities (not group) otherwise the trigger will not perform correctly
          - device_tracker.iphone8_max_wifi
          - device_tracker.iphone8_ing_wifi
          - device_tracker.iphone8_ing_bt
          - device_tracker.iphone8_max_bt    
          - input_boolean.guests
        value_template: >
          {{ (1 if states|selectattr('entity_id','in',state_attr('group.phone_max','entity_id'))
                   |selectattr('state','eq','home')|list|count > 0 else 0) + 
             (1 if states|selectattr('entity_id','in',state_attr('group.phone_ing','entity_id'))
                   |selectattr('state','eq','home')|list|count > 0 else 0) +
             (1 if is_state('input_boolean.guests','on') else 0) }}

    # Gesamtstatus: ist jemand zuhause
      home_status:
        friendly_name: 'Home Presence Status'
        entity_id: input_select.home_status_dropdown
        value_template: '{{ states.input_select.home_status_dropdown.state }}'
        icon_template: mdi:home-account #account-supervisor-circle oder account-search
          #account-supervisor-circle oder account-search


###############################################################################
##  Automations
###############################################################################
automation:
  # Update device_tracker bluetooth states from the confidence values derived from BlueTooth monitor.sh 
  # We stick to the device_tracker sensors because they were already in use...input_boolean would be fine too...
  # ...and I like the idea, that the monitor.sh scripts are just a better source for the intended bluetooth device_trackers.
  - alias: Max Occupancy On
    trigger:
      - platform: numeric_state
        entity_id: sensor.max_home_confidence
        above: *int_confidence_threshold_home
    action:
      - service: device_tracker.see
        data:
          dev_id: iphone8_max_bt
          location_name: home
          source_type: bluetooth
  - alias: Max Occupancy Off
    trigger:
      - platform: numeric_state
        entity_id: sensor.max_home_confidence
        below: *int_confidence_threshold_home
    action:
      - service: device_tracker.see
        data:
          dev_id: iphone8_max_bt
          location_name: not_home
          source_type: bluetooth

  - alias: Ing Occupancy On
    trigger:
      - platform: numeric_state
        entity_id: sensor.ing_home_confidence
        above: *int_confidence_threshold_home
    action:
      - service: device_tracker.see
        data:
          dev_id: iphone8_ing_bt
          location_name: home
          source_type: bluetooth
  - alias: Ing Occupancy Off
    trigger:
      - platform: numeric_state
        entity_id: sensor.ing_home_confidence
        below: *int_confidence_threshold_home
    action:
      - service: device_tracker.see
        data:
          dev_id: iphone8_ing_bt
          location_name: not_home
          source_type: bluetooth

  # Enhancemanets for BlueTooth monitor.sh 
  # if confidence starts to drop in one area, we trigger a arrival scan in the other area 
  #   (in case of movement inside the house)
  - alias: Start BT Arrival Scan Ost
    trigger:
      - platform: numeric_state
        entity_id: 
          - sensor.max_present_w
          - sensor.ing_present_w
        below: *int_confidence_threshold_area_arrival_scan
    action:
      - service: mqtt.publish
        data_template:
          topic: "monitor/scan/arrive" 
          payload: '{"data" : "west"}' #this monitor publisher will NOT respond!
  - alias: Start BT Arrival Scan West
    trigger:
      - platform: numeric_state
        entity_id: 
          - sensor.max_present_o
          - sensor.ing_present_o
        below: *int_confidence_threshold_area_arrival_scan
    action:
      - service: mqtt.publish
        data_template:
          topic: "monitor/scan/arrive" 
          payload: '{"data" : "ost"}' #this monitor publisher will NOT respond!

  # if confidence dropped to 0 in one area, we trigger a departure scan in the other area 
  #   (to speed things up, in case the 2nd monitor missed the departure)
  - alias: Start BT Departure Scan Ost
    trigger:
      - platform: numeric_state
        entity_id: 
          - sensor.max_present_w
          - sensor.ing_present_w
        below: *int_confidence_threshold_area_departure_scan
        for:
          seconds: 15
    action:
      - service: mqtt.publish
        data_template:
          topic: "monitor/scan/depart" 
          payload: '{"data" : "west"}' #this monitor publisher will NOT respond!
  - alias: Start BT Departure Scan West
    trigger:
      - platform: numeric_state
        entity_id: 
          - sensor.max_present_o
          - sensor.ing_present_o
        below: *int_confidence_threshold_area_departure_scan
        for:
          seconds: 15
    action:
      - service: mqtt.publish
        data_template:
          topic: "monitor/scan/depart" 
          payload: '{"data" : "ost"}' #this monitor publisher will NOT respond!

  # if WiFi detects an arrival, we trigger a BT arrival scan (in case monitor.sh missed that)
  # if frontdoor opens too.
  - alias: Start BT Arrival Scan
    trigger: 
      - platform: state
        entity_id: 
          - device_tracker.iphone8_max_wifi
          - device_tracker.iphone8_ing_wifi
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: group.entrance_door 
        to: 'on' #=open
        for:
          seconds: 1
    condition: []
    action:
      - service: mqtt.publish
        data_template:
          topic: "monitor/scan/arrive"
          payload: ''

  # if WiFi detects a departure, we trigger a BT depart scan (in case monitor.sh missed that)
  # if frontdoor is closed (and stays closed for some time) too.
  # we do a depart scan 20secs, 1min and 2 min after frontdoor is closed.
  - alias: Start BT Departure Scan
    trigger: 
      - platform: state
        entity_id: 
          - device_tracker.iphone8_max_wifi
          - device_tracker.iphone8_ing_wifi
        from: 'home'
        to: 'not_home'
      - platform: state
        entity_id: group.entrance_door 
        to: 'off' #closed
        for:
          seconds: 20
    condition: []
    action:
      - service: mqtt.publish
        data_template:
          topic: "monitor/scan/depart"
          payload: ''
      - delay: '00:00:40'
      - service: mqtt.publish
        data_template:
          topic: "monitor/scan/depart"
          payload: ''
      - delay: '00:01:00'
      - service: mqtt.publish
        data_template:
          topic: "monitor/scan/depart"
          payload: ''


  # save the time a status was changed last, because these values will be reset every time HA is rebooted
  - alias: personstatus_last_changed_date_and_time #Person-Status and home-status last changed date and time
    trigger:
      platform: state
      entity_id: 
        - input_select.max_status_dropdown
        - input_select.ing_status_dropdown
        - input_select.home_status_dropdown
    mode: queued
    action:
      - service: input_datetime.set_datetime
        data_template:
          entity_id: input_datetime.{{ trigger.entity_id[13:] }}_last_changed
          time: '{{ (as_timestamp(now()) | timestamp_custom("%H:%M:%S", true)) }}'
          date: '{{ (as_timestamp(now()) | timestamp_custom("%Y-%m-%d", true)) }}'

# if a device_tracker changed while HA was offline, we have to correct the input_select.*_status_dropdown after restart.
# We also do that once a day (00:45 at night) in case a trigger was missed.
# Becasue *.last_changed value is reset at boot time, we use a persistent variable 'input_datetime.*_status_dropdown_last_changed'.
  - alias: Person- and Home-Status correction
    trigger: 
      - platform: homeassistant
        event: start
      - platform: time
        at: '00:45:00'
    condition: []
    action:
      # first update device status from MQTT (BlueTooth monitor.sh) 
      - service: mqtt.publish
        data_template:
          topic: "monitor/scan/restart"
          payload: ''
      - delay: '00:00:30'
      - service: mqtt.publish
        data:
          topic: "monitor/ost/KNOWN DEVICE STATES"
          payload: "on"
      - service: mqtt.publish
        data:
          topic: "monitor/west/KNOWN DEVICE STATES"
          payload: "on"
      - delay: '00:00:10'
      # correct person 1
      - service: input_select.select_option
        data_template:
          entity_id: input_select.max_status_dropdown
          option: >
           {% if is_state('group.phone_max','home') %}
              {% if states.input_select.max_status_dropdown.state in ['Just Arrived','Just Left'] %}
                Home
              {% elif states.input_select.max_status_dropdown.state in ['Away', 'Extended Away'] %}
                Just Arrived
              {% else %}
                Home
              {% endif %}
            {% else %} 
              {% if states.input_select.max_status_dropdown.state in ['Just Left'] %}
                Away
              {% elif states.input_select.max_status_dropdown.state in ['Home', 'Just Arrived'] %}
                Just Left
              {% elif (states.input_select.max_status_dropdown.state in ['Away']) and 
                      (((as_timestamp(now()) - as_timestamp(states.input_datetime.max_status_dropdown_last_changed.state))/3600) | int >=24) %}
                Extended Away
              {% elif states.input_select.max_status_dropdown.state in ['Extended Away'] %}
                Extended Away
              {% else %}
                Away
              {% endif %}
            {% endif %}
      # correct person 2
      - service: input_select.select_option
        data_template:
          entity_id: input_select.ing_status_dropdown
          option: >
            {% if is_state('group.phone_ing','home') %}
              {% if states.input_select.ing_status_dropdown.state in ['Just Arrived','Just Left'] %}
                Home
              {% elif states.input_select.ing_status_dropdown.state in ['Away', 'Extended Away'] %}
                Just Arrived
              {% else %}
                Home
              {% endif %}
            {% else %} 
              {% if states.input_select.ing_status_dropdown.state in ['Just Left'] %}
                Away
              {% elif states.input_select.ing_status_dropdown.state in ['Home', 'Just Arrived'] %}
                Just Left
              {% elif (states.input_select.ing_status_dropdown.state in ['Away']) and 
                      (((as_timestamp(now()) - as_timestamp(states.input_datetime.ing_status_dropdown_last_changed.state))/3600) | int >=24) %}
                Extended Away
              {% elif states.input_select.ing_status_dropdown.state in ['Extended Away'] %}
                Extended Away
              {% else %}
                Away
              {% endif %}
            {% endif %}
      # correct home status
      - service: input_select.select_option
        data_template:
          entity_id: input_select.home_status_dropdown
          option: >
            {% if is_state('input_select.home_status_dropdown','Away') %}
              {% if (((as_timestamp(now()) - as_timestamp(states.input_datetime.home_status_dropdown_last_changed.state))/3600) | int >=24) %}
                Extended Away
              {% endif %}
            {% endif %}


# STATUS-Übergänge Personen
#
#         /-----------------------------------------------[10min]------------------------------------------------\
#        |                                                                                                        |
#        |                                                               /--------[DeviceTracker: home]------\    |
#        |                                                              |                                     |   |
#        V                                                              V                                     |   |
#       Away  --[DeviceTracker: home]-->  Just Arrived  --[10min]-->  Home  --[DeviceTracker: not_home]-->  Just Left
#        |                                    A   |                                                             A
#      [24h]                                  |   |                                                             |
#        V                                    |   \---------------------------[DeviceTracker: not_home]---------´ 
#   Extended Away  ---[DeviceTracker: home]---/
#
  - alias: Mark person as just arrived
    mode: queued
    trigger:
      - platform: state
        entity_id: 
          - group.phone_max 
          - group.phone_ing
        from: 'not_home'
        to: 'home'
    action:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'group.phone_max' %}
              input_select.max_status_dropdown
            {% else %}
              input_select.ing_status_dropdown
            {% endif %}
          option: >
            {%- if trigger.entity_id == 'group.phone_max' -%}
              {%- set val='max_status_dropdown'-%}
            {%- else -%}
              {%- set val='ing_status_dropdown'-%}
            {% endif %} 
                    
            {% if states.input_select[val].state in ['Just Left', 'Home'] %}
              Home
            {% else %}
              Just Arrived
            {% endif %}
  
  - alias: Mark person as just left
    mode: queued
    trigger:
      - platform: state
        entity_id: 
          - group.phone_max 
          - group.phone_ing 
        from: 'home'
        to: 'not_home'
    action:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'group.phone_max' %}
              input_select.max_status_dropdown
            {% else %}
              input_select.ing_status_dropdown
            {% endif %}
          option: Just Left
  
  - alias: Mark person as home #('Just Arrived' vor 10min) oder ('Just Arrived' nach 'Just Left')
    mode: queued
    trigger:
      - platform: state
        entity_id: 
          - input_select.max_status_dropdown
          - input_select.ing_status_dropdown
        to: 'Just Arrived'
        for:
          minutes: *int_minutes_after_being_home # default:10
      - platform: state
        entity_id: 
          - input_select.max_status_dropdown
          - input_select.ing_status_dropdown
        from: 'Just Left'
        to: 'Just Arrived'
    action:
      - service: input_select.select_option
        data_template:
          entity_id: "{{ trigger.entity_id }}"
          option: Home
  
  - alias: Mark person as away  #('Just Left' vor 10min) 
    mode: queued
    trigger:
      - platform: state
        entity_id: 
          - input_select.max_status_dropdown
          - input_select.ing_status_dropdown
        to: 'Just Left'
        for:
          minutes: *int_minutes_after_being_away # default: 10
    action:
      - service: input_select.select_option
        data_template:
          entity_id: "{{ trigger.entity_id }}"
          option: Away
  
  - alias: Mark person as extended away  #('Away' für 24h) 
    mode: queued
    trigger:
      - platform: state
        entity_id: 
          - input_select.max_status_dropdown
          - input_select.ing_status_dropdown
        to: 'Away'
        for:
          hours: *int_hours_after_being_extendedaway # default: 24
          minutes: *int_minutes_after_being_extendedaway #for testing. Default: 0
    action:
      - service: input_select.select_option
        data_template:
          entity_id: "{{ trigger.entity_id }}"
          option: Extended Away


# STATUS-Übergänge Home
#
#        /-------[n_people_home <1]--------\
#        |                                  |
#        V                                  |
#       Away  ---[n_people_home >0]---->  Home
#        |                                  A
#      [24h]                                |
#        V                                  |
#   Extended Away  ---[n_people_home >0]---/
#
  - alias: Home Status - Leaving # (n_people_home <=0) UND (Home-Status='Home')
    trigger:
      platform: numeric_state
      entity_id: sensor.n_people_home
      below: 1
    condition:
      condition: state
      entity_id: input_select.home_status_dropdown
      state: Home
    action:
      service: input_select.select_option
      entity_id: input_select.home_status_dropdown
      data:
        option: Away

  - alias: Home Status - Arriving #n_people_home ++
    trigger:
      platform: state
      entity_id: sensor.n_people_home
    condition:
      condition: template
      value_template: >
        {{ trigger.to_state.state|int > trigger.from_state.state|int }}
    action:
      service: input_select.select_option
      entity_id: input_select.home_status_dropdown
      data:
        option: Home

  - alias: Home Status - Vacation  #('Away' für 24h) 
    trigger:
      platform: state
      entity_id: input_select.home_status_dropdown
      to: 'Away'
      for:
        hours: *int_hours_after_being_extendedaway # default: 24
        minutes: *int_minutes_after_being_extendedaway #for testing. Default: 0
    action:
      service: input_select.select_option
      entity_id: input_select.home_status_dropdown
      data:
        option: Extended Away