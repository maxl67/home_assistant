###############################################################################
#   @author       : Max Reigl
#   @date         : 14.11.2019
#   @package      : doors_windows
#   @description  : Notifications for situations around door and windows
#   @links        : 
###############################################################################

################################################
##  Customize
################################################
homeassistant:
  customize:
  # definitions
    package.node_anchors:
      common: &common
        package: "doors_windows"
      door: &door
        <<: *common
        device_class: door
      window: &window
        <<: *common
        device_class: window
  # sensors
    binary_sensor.lumi_lumi_sensor_magnet_aq2_031b3225_1_6:
      friendly_name: Gästezimmer
      <<: *door
    binary_sensor.lumi_lumi_sensor_magnet_aq2_03139f7b_1_6:
      friendly_name: Wohnzimmer W
      <<: *door
    binary_sensor.lumi_lumi_sensor_magnet_aq2_9ac61c04_1_6:
      friendly_name: Wohnzimmer S
      <<: *door
    binary_sensor.lumi_lumi_sensor_magnet_aq2_f2fd4604_1_6:
      friendly_name: Esszimmer
      <<: *door
    binary_sensor.lumi_lumi_sensor_magnet_aq2_4cc61c04_1_6:
      friendly_name: Küche
      <<: *door
    binary_sensor.lumi_lumi_sensor_magnet_aq2_0aa90a04_on_off:
      friendly_name: Arbeitszimmer S
      <<: *door
    binary_sensor.lumi_lumi_sensor_magnet_aq2_0ee51c04_1_6:
      friendly_name: Arbeitszimmer O
      <<: *door
    binary_sensor.lumi_lumi_sensor_magnet_aq2_032b77ce_1_6:
      friendly_name: Schlafzimmer
      <<: *door
    binary_sensor.lumi_lumi_sensor_magnet_aq2_20a30a04_on_off:
      friendly_name: Eingang
      <<: *door
    binary_sensor.lumi_lumi_sensor_magnet_aq2_73c61c04_1_6:
      friendly_name: Bad
      <<: *window
    binary_sensor.lumi_lumi_sensor_magnet_aq2_c2e41c04_1_6:
      friendly_name: Gästebad
      <<: *window
  # groups, variables
    group.all_doors:
      <<: *common
    group.all_windows:
      <<: *common
    group.entrance_door:
      <<: *common
    input_boolean.open_backdoor_alert:
      <<: *common
    input_boolean.open_window_alert:
      <<: *common
  # automations
    automation.notify_all_open_doors:
      <<: *common
    automation.notify_all_open_windows:
      <<: *common
    automation.reset_alert_open_doors:
      <<: *common
    automation.reset_alert_open_windows:
      <<: *common
    automation.test_zone_notify:
      <<: *common

###############################################################################
##  Groups
###############################################################################
group:
  # 'group.all_doors' fasst den Status aller Türen zusammen.
  #   Ist ein Türsensor 'on'='Offen', dann wird die Gruppe 'on'.
  all_doors:
    name: alle Türen
    icon: mdi:door
    entities:
      - binary_sensor.lumi_lumi_sensor_magnet_aq2_031b3225_1_6 #1 Gästezimmer
      - binary_sensor.lumi_lumi_sensor_magnet_aq2_03139f7b_1_6 #2 Wohnzimmer W
      - binary_sensor.lumi_lumi_sensor_magnet_aq2_9ac61c04_1_6 #3 Wohnzimmer S
      - binary_sensor.lumi_lumi_sensor_magnet_aq2_f2fd4604_1_6 #4 Esszimmer
      - binary_sensor.lumi_lumi_sensor_magnet_aq2_4cc61c04_1_6 #5 Küche
      - binary_sensor.lumi_lumi_sensor_magnet_aq2_0aa90a04_on_off #6 Arbeitszimmer S
      - binary_sensor.lumi_lumi_sensor_magnet_aq2_0ee51c04_1_6 #7 Arbeitszimmer O
      - binary_sensor.lumi_lumi_sensor_magnet_aq2_032b77ce_1_6 #8 Schlafzimmer
  all_windows:
    name: alle Fenster
    icon: mdi:window-closed
    entities:
      - binary_sensor.lumi_lumi_sensor_magnet_aq2_73c61c04_1_6 #12: Bad
      - binary_sensor.lumi_lumi_sensor_magnet_aq2_c2e41c04_1_6 #13: Gästebad
      #fehlt: SZ, Dachfenster
  entrance_door:
    name: Eingangstür
    icon: mdi:door
    entities:
      - binary_sensor.lumi_lumi_sensor_magnet_aq2_20a30a04_on_off #9 Eingangstür


###############################################################################
##  Variables
###############################################################################
# value to remember if an alert is active
input_boolean:
  open_backdoor_alert:
    name: Balkontür ist offen   #active warning: door is open
    icon: mdi:alert-box-outline
  open_window_alert:
    name: Fenster ist offen   #active warning: window is open
    icon: mdi:alert-box-outline
  #open_frontdoor_alert: to be installed

###############################################################################
##  Automations
###############################################################################
automation:
  - alias: Notify all - Open Doors
    trigger:
      # niemand zuhause und mindestens eine Tür offen 
      platform: template
      value_template: >
        {{ states.sensor.home_status.state in ['Away', 'Extended Away']  
           and is_state('group.all_doors', 'on') }}
      for:
        seconds: 5
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.open_backdoor_alert
      - choose:
        - conditions:
          - condition: state
            entity_id: sensor.ing_status
            state: 'Just Left'
          sequence:
            - service: notify.family_main_devices
              data_template:
                title: "Smart Home Alarm"
                message: >
                  {{states|selectattr('entity_id','in',state_attr('group.all_doors','entity_id'))|selectattr('state','eq','on')|list|count}} {{'Terassentür ist' if states|selectattr('entity_id','in',state_attr('group.all_doors','entity_id'))|selectattr('state','eq','on')|list|count==1 else 'Terassentüren sind'}} offen (und {{states|selectattr('entity_id','in',state_attr('group.all_windows','entity_id'))|selectattr('state','eq','on')|list|count}} Fenster).
                data:
                  subtitle: "Türen offen!"
                  push:
                    badge: "{{states.sensor.count_notification_alerts.state|int}}"
                    sound:
                      name: default 
                      #name: "US-EN-Daisy-Back-Door-Open.wav" 
                      critical: 1
                      volume: 1.0
                    thread-id: "doorswindows-notification-group"
                  apns_headers:
                    'apns-collapse-id': 'open-doors-detected'
                  clickAction: '/lovelace/home'
        default:
        - service: notify.max
          data_template:
            title: "Smart Home Alarm"
            message: >
              {{states|selectattr('entity_id','in',state_attr('group.all_doors','entity_id'))|selectattr('state','eq','on')|list|count}} {{'Terassentür ist' if states|selectattr('entity_id','in',state_attr('group.all_doors','entity_id'))|selectattr('state','eq','on')|list|count==1 else 'Terassentüren sind'}} offen (und {{states|selectattr('entity_id','in',state_attr('group.all_windows','entity_id'))|selectattr('state','eq','on')|list|count}} Fenster).
            data:
              subtitle: "Türen offen!"
              push:
                badge: "{{states.sensor.count_notification_alerts.state|int}}"
                sound:
                  name: default 
                  #name: "US-EN-Daisy-Back-Door-Open.wav" 
                  critical: 1
                  volume: 1.0
                thread-id: "doorswindows-notification-group"
              apns_headers:
                'apns-collapse-id': 'open-doors-detected'
              clickAction: '/lovelace/home'

  - alias: Notify all - Open Windows
    trigger:
      # niemand zuhause und mindestens ein Fenster offen 
      platform: template
      value_template: >
        {{ states.sensor.home_status.state in ['Away', 'Extended Away']  
           and is_state('group.all_windows', 'on') 
           and is_state('group.all_doors', 'off') }}
      for:
        seconds: 5
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.open_window_alert
      - service: notify.family_main_devices
        data_template:
          title: "Smart Home Alarm"
          message: >
            {{states|selectattr('entity_id','in',state_attr('group.all_windows','entity_id'))|selectattr('state','eq','on')|list|count}} Fenster {{'ist' if states|selectattr('entity_id','in',state_attr('group.all_windows','entity_id'))|selectattr('state','eq','on')|list|count==1 else 'sind'}} offen.
          data:
            subtitle: "Fenster offen!"
            push:
              badge: "{{states.sensor.count_notification_alerts.state|int}}"
              sound:
                name: default
                #name: "US-EN-Daisy-Front-Window-Open.wav"
                critical: 1
                volume: 1.0
              thread-id: "doorswindows-notification-group"
            apns_headers:
              'apns-collapse-id': 'open-windows-detected'
            clickAction: '/lovelace/home'
  
  - alias: Reset alert - Open Doors
    trigger:
      # jemand zuhause oder alle Türen zu 
      platform: template
      value_template: >
        {{ (states.sensor.home_status.state in ['Home']  
              or is_state('group.all_doors', 'off'))
            and is_state('input_boolean.open_backdoor_alert', 'on') }}
      for:
        seconds: 1
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.open_backdoor_alert
      - service: notify.family_main_devices
        data_template:
          title: "Smart Home ..."
          message: "Türen Alarm aufgehoben."
          data:
            push:
              badge: "{{states.sensor.count_notification_alerts.state|int}}"
              thread-id: "doorswindows-notification-group"
            apns_headers:
              'apns-collapse-id': 'open-doors-detected'
            clickAction: '/lovelace/home'
  - alias: Reset alert - Open Windows
    trigger:
      # jemand zuhause oder alle Fenster zu 
      platform: template
      value_template: >
        {{ (states.sensor.home_status.state in ['Home']  
              or is_state('group.all_windows', 'off'))
            and is_state('input_boolean.open_window_alert', 'on') }}
      for:
        seconds: 1
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.open_window_alert
      - service: notify.family_main_devices
        data_template:
          title: "Smart Home ..."
          message: "Fenster Alarm aufgehoben."
          data:
            push:
              badge: "{{states.sensor.count_notification_alerts.state|int}}"
              thread-id: "doorswindows-notification-group"
            apns_headers:
              'apns-collapse-id': 'open-windows-detected'
            clickAction: '/lovelace/home'

  - alias: Test Zone Notify
    trigger:
      - platform: zone
        entity_id: group.phone_max
        zone: zone.home
        event: "leave" # Event is either enter or leave
      - platform: zone
        entity_id: group.phone_max
        zone: zone.tik
        event: "enter" # Event is either enter or leave
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: group.all_doors
          state: 'on'
        - condition: template
          value_template: "{{ states.sensor.ing_status.state not in ['home', 'Just Arrived'] }}"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.open_backdoor_alert
      - service: notify.max
        data_template:
          title: "Smart Home Alerts (Zone-test)"
          message: "Mindestens eine Balkontür ist offen."
          data:
            subtitle: "Türen offen!"
            push:
              badge: "{{states.sensor.count_notification_alerts.state|int}}"
