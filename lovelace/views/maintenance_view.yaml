anchors:
  style_entitycard_header: &style_header
    card_mod: 
      style: |
        .card-header {
          font-size: 20px;
          padding: 10px 16px;
        }

#==================================================
#id: maintenance
title: Wartung
path: maintenance
icon: mdi:tools
visible:
  - user: 69c32196d4d84d41b973eeec6dfe57ab #Max
#  - user: 3eb1963b87414099aa2ad0edd96086d3 #Ing
#  - user: 3d604b31fc35442dae08553df3add73a #MaPa
cards:
  - type: entities
    entities:
      - entity: input_select.debug_mode

  #------------------------------------------------
  # Automatisierungen
  - !include ../cards/automation_overwrites.yaml

  #------------------------------------------------
  #    Test: Person - button
  - type: horizontal-stack
    cards:
      - type: custom:button-card
        name: Max
        entity: sensor.iphonemax8_battery_level  #sensor.max_status
        entity_picture: >
          [[[
            if (['Home','Just arrived'].includes(states['sensor.max_status'].state)) return '/local/max.jpg';
            else return '/local/max.jpg';
          ]]]
        show_entity_picture: true
        aspect_ratio: 1/1
        color_type: icon
        show_state: false
        styles:
          card:
            - padding: 6%
          grid:
            - grid-template-areas: '"i batt" "i n" "pstat pstat" "locw loco"'
            - grid-template-columns: 1fr min-content
            - grid-template-rows: 1fr min-content min-content min-content
          name:
            - color: white
            - align-self: end #middle
            - justify-self: end #start
            - font-size: 12px
          img_cell:
            - justify-content: start
            - align-items: start
            - margin: none
          entity_picture:
            - border-radius: 15%
          icon:
            - width: 75%
#            - height: 90%
            - margin-top: -5%
          custom_fields:
            batt:
              - align-self: start
              - justify-self: end
              - font-size: 10px
            pstat:
              - font-size: 14px
              - padding-top: 4px
              - padding-bottom: 2px
            locw:
              - padding-top: 4px
              - align-self: middle
              - justify-self: start
              - font-size: 10px
              - --text-color-sensor-w: >
                  [[[ if (states['sensor.max_present_w'].state >= 95) return "white" ;
                      else if (states['sensor.max_present_w'].state >= 30) return "yellow";
                      else if (states['sensor.max_present_w'].state > 0) return "orange";
                      else return "gray" ]]]
            loco:
              - padding-top: 4px
              - align-self: middle
              - justify-self: start
              - font-size: 10px
              - --text-color-sensor-o: >
                  [[[ if (states['sensor.max_present_o'].state >= 95) return "white" ;
                      else if (states['sensor.max_present_o'].state >= 30) return "yellow";
                      else if (states['sensor.max_present_o'].state > 0) return "orange";
                      else return "gray" ]]]
        custom_fields:
          batt: >
            [[[
              return `<ha-icon
                icon=${entity.attributes.icon}
                style="width: 18px; height: 18px; ">
                </ha-icon><br/><span>${entity.state}%</span>`
            ]]]
          locw: >
            [[[
              return `<ha-icon
                icon='mdi:set-left-center' 
                style="width: 16px; height: 16px; ">
                </ha-icon> 
                <span style='color: var(--text-color-sensor-w);'>${states['sensor.max_present_w'].state}%</span>`
            ]]]
          loco: >
            [[[
              return `<ha-icon
                icon='mdi:set-center-right' 
                style="width: 16px; height: 16px; ">
                </ha-icon> 
                <span style='color: var(--text-color-sensor-o);'>${states['sensor.max_present_o'].state}%</span>`
            ]]]
          pstat: >
            [[[ return states['sensor.max_status'].state; ]]]

      - type: custom:button-card
        color_type: blank-card
      - type: custom:button-card
        color_type: blank-card
