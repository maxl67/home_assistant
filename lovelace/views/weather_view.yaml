anchors:
  style_entitycard_header: &style_header
    card_mod: 
      style: |
        .card-header {
          font-size: 20px;
          padding: 10px 16px;
        }
  style_entitycard_noheader: &style_noheader
    card_mod:
      style: |
        ha-card .card-header {
          padding: 0px;
          display: unset;
        }

#==================================================
title: Wetter
path: weather
icon: mdi:weather-partly-cloudy
cards:
  #------------------------------------------------
  # current weather info and forcast
  - type: custom:vertical-stack-in-card
    cards:
    - type: custom:weather-chart-card
      title: #Woche (DWD)
      entity: weather.dwd_weather_ak_stuttgart
      show_main: true
      show_attributes: true
      units:
        #pressure: mmHg
        speed: km/h
      locale: 'de-DE'
      icons: /local/images/icons/weather_fill/
      style: |
        .card-header {
          padding: 20px 16px 10px;
          line-height: 32px;
        }
    - type: divider
    # - type: custom:weather-chart-card
    #   #title: Stündlich (OWM)
    #   entity: weather.home_hourly
    #   show_main: false
    #   show_attributes: false
    #   units:
    #     #pressure: mmHg
    #     speed: km/h
    #   style: |
    #     .card-header {
    #       padding: 20px 16px 10px;
    #       line-height: 32px;
    #     }
    - type: custom:hourly-weather
      entity: weather.home_hourly
      num_segments: 12 s
      name: null #nächste 12 Stunden
      icons: true
 

  #------------------------------------------------
  # show weather alerts (if current_warn_count > 0)
  - type: conditional
    conditions:
      - entity: sensor.dwd_current_warn_count
        state_not: '0'
    card:
      type: custom:vertical-stack-in-card
      #title: Deutscher Wetterdienst  #title is too big here...
      cards:
        # show the text of all DWD warnings
        - type: markdown
          card_mod:
            style: |
              ha-card {
                border: 1px solid #FF7738;
              }
          content: >
              <h3>{{ state_attr('sensor.dwd_weather_warnings_current_warning_level','region_name') }}</h3>
              Aktuell 
              {% if states('sensor.dwd_current_warn_count')|int(default=0) == 1 %}
                besteht {{ states('sensor.dwd_current_warn_count') }} Warnung 
              {% else %}
                bestehen {{ states('sensor.dwd_current_warn_count') }} Warnungen 
              {% endif %}
              mit der maximalen Stufe {{ states('sensor.dwd_max_warn_level') }}.
              {%- for i in range(0, state_attr('sensor.dwd_weather_warnings_current_warning_level','warning_count')) -%}
                {%- set type_attr=  "warning_"+loop.index|string + "_type" -%}
                {%- set lvl_attr=   "warning_"+loop.index|string + "_level" -%}
                {%- set head_attr=  "warning_"+loop.index|string + "_headline" -%}
                {%- set start_attr= "warning_"+loop.index|string + "_start" -%}
                {%- set end_attr=   "warning_"+loop.index|string + "_end" -%}
                {%- set desc_attr=  "warning_"+loop.index|string + "_description" -%}
                <hr/>
                <em>
                {%- set start_time= state_attr('sensor.dwd_weather_warnings_current_warning_level',start_attr) -%}
                {%- set days = (start_time.strftime('%j') | int(default=0)) - (now().strftime('%j')) | int(default=0)  -%}
                {% if as_timestamp(start_time, default=0) <= as_timestamp(now(), default=0) %}
                jetzt
                {% elif days==0 %}
                heute
                {% elif days==1 %}
                morgen
                {% else %}
                in {{days}} Tagen
                {% endif %}
                </em>
                <h3>{{ state_attr('sensor.dwd_weather_warnings_current_warning_level',head_attr) }}</h3>
                <em>Warnstufe:</em> <strong>{{ state_attr('sensor.dwd_weather_warnings_current_warning_level',lvl_attr) }}</strong>
                <br>
                <em>Von:</em> {{ as_timestamp(state_attr('sensor.dwd_weather_warnings_current_warning_level',start_attr)) | timestamp_custom('%a %d.%m %H:%M',true) }}
                <br>
                <em>Bis:</em> {{ as_timestamp(state_attr('sensor.dwd_weather_warnings_current_warning_level',end_attr)) | timestamp_custom('%a %d.%m %H:%M',true) }}
                <br>
                {{ state_attr('sensor.dwd_weather_warnings_current_warning_level',desc_attr) }}
                <br>
              {%- endfor -%}
        # show warning count and status received from DWD
        - type: entities
          title: ' '
          <<: *style_noheader
          entities:
            - type: custom:fold-entity-row
              head:
                type: section
                label: Wetterwarnungen & Alarm
              open: false
              padding: false
              entities:
                - entity: sensor.dwd_current_warn_count
                  type: custom:multiple-entity-row
                  name: DWD Meldungen aktuell
                  secondary_info: last-changed
                  entities:
                    - entity: sensor.dwd_current_warn_level
                      name: DWD lvl
                    - entity: sensor.dwd_max_warn_level
                      name: max lvl
                - entity: input_boolean.dwd_weather_alert
                  type: custom:multiple-entity-row
                  name: Wetter Alarm
                  secondary_info: last-changed
                  entities:
                    - entity: sensor.count_notification_alerts
                      name: Anz. Alarme

                - type: section
                  label: Warnstufen
                - type: custom:auto-entities
                  card: 
                    type: glance
                    name: ' '
                    state_color: true
                    show_name: false
                    columns: 8
                    card_mod: #todo: das geht noch nicht. Wie den 2. Teil adressieren?
                        style: |
                          ha-card {
                            border: 0px solid green;
                          };
                          ha-card div.entities.no-header {
                            padding-top: 0px;
                          };
                  entities:
                    - entity: sensor.dwd_current_warn_level
                      name: DWD Warnstufe
                  filter:
                    include:
                      - entity_id: 'sensor.dwd_current_warn_level_*'
                        state: '>= 0'
                  sort:
                    method: state
                    numeric: true
                    reverse: true
                  show_empty: false
                  unique: true

  - type: custom:tabbed-card
    options:
      defaultTabIndex: 0 # in a 0 based index, 1 = the second tab would be the active tab on render
    styles:
      --mdc-typography-button-font-size: 10
      --mdc-theme-primary: 
    tabs:
      #------------------------------------------------
      # MeteoBlue Meteogram
      - attributes:
          label: Meteo*
        card:
          type: picture
          image: !secret meteogram_image
          tap_action:
            action: url
            url_path: !secret meteogram_url

      - attributes:
          icon: mdi:weather-cloudy
        card:
          type: picture-entity
          entity: camera.satelite_clouds
          name: Bewölkung #clouds
          show_state: false
      - attributes:
          icon: mdi:weather-pouring
        card:
          type: picture-entity
          entity: camera.satelite_rain
          name: Regen #rain
          show_state: false
      - attributes:
          icon: mdi:weather-snowy-heavy
        card:
          type: picture-entity
          entity: camera.satelite_snow
          name: Schnee #snow
          show_state: false

  #------------------------------------------------
  # Wetter-Entities, Sonnenstand und -schein
  - type: custom:vertical-stack-in-card
    cards:
      - type: entities
        title: Wetter, Sonne, Regen
        show_header_toggle: false
        <<: *style_header
        entities:
          - entity: weather.dwd_weather_ak_stuttgart
            name: Temperatur (DWD)
          - entity: weather.home_hourly
            name: Temperatur (OWM)
          - type: section
            label: Sonnenstand
          - entity: sensor.sun_elevation
            type: custom:multiple-entity-row
            name: Azimut
            icon: mdi:weather-sunset #.orbit
            state_header: Höhe
            entities:
            - entity: sensor.sun_direction
              name: Richtung
            - entity: sensor.sun_elevation_noon
              name: Höhe max
          - entity: sun.sun
            type: custom:multiple-entity-row
            icon: mdi:theme-light-dark
            entities:
            - entity: sensor.sun_elevation_ratio
              name: elev.
          - type: section
            label: Sonnenschein
          - entity: sensor.sunshine_probability #sensor.sun_is_shining
            type: custom:multiple-entity-row
            name: Sonne scheint
            icon: mdi:white-balance-sunny
            state_header: prob.
            entities:
            - entity: sensor.sunshine_south
              name: Süd
            - entity: sensor.sunshine_west
              name: West
          - entity: sensor.forcast_sunshine_hours_tomorrow
            type: custom:multiple-entity-row
            name: Dauer
            icon: mdi:sun-wireless #mdi:sun-clock-outline #geht nicht
            state_header: morgen
            entities:
            - entity: sensor.sunshine_hours_yesterday
              name: gestern
              format: precision1
            - entity: sensor.sunshine_hours_today
              name: heute #ist
              format: precision1
            - entity: sensor.forcast_sunshine_hours_today
              name: später #heute noch

      # # # debug: Sunshine probability calculation
  - type: conditional
    conditions:
      - entity: input_select.debug_mode
        state: 'all'
    card:
      type: entities
      title: ' '
      show_header_toggle: false
      card_mod:
        style: |
          ha-card .card-header {
            padding: 0px;
            display: unset;
      entities:   
      # - type: custom:fold-entity-row
      #   head:
      #     type: section
      #     label: Debug
      #   open: true
      #   padding: false
      #   entities:
      - type: section
        label: debug (Süd)
      - entity: sensor.bkw_sued_power
        name: Solarleistung aktuell
      - type: custom:template-entity-row
        icon: mdi:calculator
        name: "Leistung Soll: 600W * {{ states('sensor.sun_elevation_ratio') }}% ="
        state: "{{ (600 * states('sensor.sun_elevation_ratio')|int / 100)|round(0) }} W" 
        active: "{{ 600 * states('sensor.sun_elevation_ratio')|int / 100 <= states('sensor.bkw_sued_power') }}"
      - type: custom:template-entity-row
        icon: mdi:finance
        name: "Faktor: {{ (150-states('sensor.sun_direction')|float)|abs|round(0) }}° zu 150° (60+{{ (max((150-states('sensor.sun_direction')|float)|abs-60,0))|round(0) }}) ="
        state: "{{ (max((150-states('sensor.sun_direction')|float)|abs-60,0)/(90-60)+1) |round(1) }}"
      - type: custom:template-entity-row
        icon: mdi:white-balance-sunny
        name: "Probab.: {{ 0 if  is_state('sensor.bkw_sued_power','unavailable') else states('sensor.bkw_sued_power')}}W / {{ (600 * states('sensor.sun_elevation_ratio')|int / 100)|round(0) }}W * Fact. ="
        state: "{{ 0 if states('sensor.sun_elevation_ratio')|int <= 0 or state_attr('sun.sun', 'azimuth')|float(default=360) >= 240 else (min(states('sensor.bkw_sued_power')|float / (600 * states('sensor.sun_elevation_ratio')|int / 100) * (max((150 - states('sensor.sun_direction')|float)|abs-60,0)/(90-60) + 1), 1) * 100) | int }} %"
        #"{{ states('sensor.sunshine_probability') }}" 
        #active: "{{ (states('sensor.sunshine_probability')|int) > 50 }}"

      - type: section
        label: debug (West)
      - entity: sensor.fritz_dect_210_solar_power_consumption 
        name: Solarleistung aktuell
      - type: custom:template-entity-row
        icon: mdi:calculator
        name: "Leistung Soll: 250W * {{ states('sensor.sun_elevation_ratio') }}% ="
        state: "{{ 250 * states('sensor.sun_elevation_ratio')|int / 100 }} W" 
        #active: "{{ 250 * states('sensor.sun_elevation_ratio')|int / 100 >= states('sensor.fritz_dect_210_solar_power_consumption') }}"
      - type: custom:template-entity-row
        icon: mdi:finance
        name: "Faktor: {{ (240-states('sensor.sun_direction')|float)|abs|round(0) }}° zu 240° (45+{{ (max((240-states('sensor.sun_direction')|float)|abs-45,0))|round(0) }}) ="
        state: "{{ (max((240-states('sensor.sun_direction')|float)|abs-45,0)/45+1)|round(1) }}"
      - type: custom:template-entity-row
        icon: mdi:white-balance-sunny
        name: "Probab.: {{ states('sensor.fritz_dect_210_solar_power_consumption')|round(0) }}W / {{ 250 * states('sensor.sun_elevation_ratio')|int / 100 }}W * Fact. ="
        state: "{{ 0 if states('sensor.sun_elevation_ratio')|int <= 0 or state_attr('sun.sun', 'azimuth')|float(default=360) <= 150 else (min(states('sensor.fritz_dect_210_solar_power_consumption')|float / (250 * states('sensor.sun_elevation_ratio')|int / 100) * (max((240 - states('sensor.sun_direction')|float)|abs-60,0)/(90-60) + 1), 1) * 100) | int }} %"

        #active: "{{ (states('sensor.sunshine_probability')|int) > 50 }}"
  #end debug

  #------------------------------------------------
  # Themperatur - Chart
  - !include ../cards/weather_chart_temp.yaml


  # #------------------------------------------------
  # - type: history-graph
  #   hours_to_show: 48
  #   entities:
  #     - entity: weather.dwd_weather_ak_stuttgart
  #       name: DWD
  #     - entity: weather.home_hourly
  #       name: OWM
