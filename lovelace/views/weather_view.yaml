anchors:
  style_entitycard_header: &style_header
    card_mod: 
      style: |
        .card-header {
          font-size: 20px;
          padding: 10px 16px;
        }
  style_entitycard_noheader: &style_noheader
    card_mod:
      style: |
        ha-card .card-header {
          padding: 0px;
          display: unset;
        }

#==================================================
title: Wetter
path: weather
icon: mdi:weather-partly-cloudy
cards:
  #------------------------------------------------
  # current weather info and forcast
  - type: custom:vertical-stack-in-card
    cards:
    - type: custom:weather-chart-card
      title: #Woche (DWD)
      entity: weather.dwd_weather_ak_stuttgart
      show_main: true
      show_attributes: true
      units:
        #pressure: mmHg
        speed: km/h
      locale: 'de-DE'
      icons: /local/images/icons/weather_fill/
      style: |
        .card-header {
          padding: 20px 16px 10px;
          line-height: 32px;
        }
    - type: divider
    - type: custom:weather-chart-card
      #title: Stündlich (OWM)
      entity: weather.home_hourly
      show_main: false
      show_attributes: false
      units:
        #pressure: mmHg
        speed: km/h
      style: |
        .card-header {
          padding: 20px 16px 10px;
          line-height: 32px;
        }

  #------------------------------------------------
  # show weather alerts (if current_warn_count > 0)
  - type: conditional
    conditions:
      - entity: sensor.dwd_current_warn_count
        state_not: '0'
    card:
      type: custom:vertical-stack-in-card
      #title: Deutscher Wetterdienst  #title is too big here...
      cards:
        # show the text of all DWD warnings
        - type: markdown
          card_mod:
            style: |
              ha-card {
                border: 1px solid #FF7738;
              }
          content: >
              <h3>{{ state_attr('sensor.dwd_weather_warnings_current_warning_level','region_name') }}</h3>
              Aktuell 
              {% if states('sensor.dwd_current_warn_count')|int(default=0) == 1 %}
                besteht {{ states('sensor.dwd_current_warn_count') }} Warnung 
              {% else %}
                bestehen {{ states('sensor.dwd_current_warn_count') }} Warnungen 
              {% endif %}
              mit der maximalen Stufe {{ states('sensor.dwd_max_warn_level') }}.
              {%- for i in range(0, state_attr('sensor.dwd_weather_warnings_current_warning_level','warning_count')) -%}
                {%- set type_attr=  "warning_"+loop.index|string + "_type" -%}
                {%- set lvl_attr=   "warning_"+loop.index|string + "_level" -%}
                {%- set head_attr=  "warning_"+loop.index|string + "_headline" -%}
                {%- set start_attr= "warning_"+loop.index|string + "_start" -%}
                {%- set end_attr=   "warning_"+loop.index|string + "_end" -%}
                {%- set desc_attr=  "warning_"+loop.index|string + "_description" -%}
                <hr/>
                <em>
                {%- set start_time= state_attr('sensor.dwd_weather_warnings_current_warning_level',start_attr) -%}
                {%- set days = (start_time.strftime('%j') | int(default=0)) - (now().strftime('%j')) | int(default=0)  -%}
                {% if as_timestamp(start_time, default=0) <= as_timestamp(now(), default=0) %}
                jetzt
                {% elif days==0 %}
                heute
                {% elif days==1 %}
                morgen
                {% else %}
                in {{days}} Tagen
                {% endif %}
                </em>
                <h3>{{ state_attr('sensor.dwd_weather_warnings_current_warning_level',head_attr) }}</h3>
                <em>Warnstufe:</em> <strong>{{ state_attr('sensor.dwd_weather_warnings_current_warning_level',lvl_attr) }}</strong>
                <br>
                <em>Von:</em> {{ as_timestamp(state_attr('sensor.dwd_weather_warnings_current_warning_level',start_attr)) | timestamp_custom('%a %d.%m %H:%M',true) }}
                <br>
                <em>Bis:</em> {{ as_timestamp(state_attr('sensor.dwd_weather_warnings_current_warning_level',end_attr)) | timestamp_custom('%a %d.%m %H:%M',true) }}
                <br>
                {{ state_attr('sensor.dwd_weather_warnings_current_warning_level',desc_attr) }}
                <br>
              {%- endfor -%}
        # show warning count and status received from DWD
        - type: entities
          title: ' '
          <<: *style_noheader
          entities:
            - type: custom:fold-entity-row
              head:
                type: section
                label: Wetterwarnungen & Alarm
              open: false
              padding: false
              entities:
                - entity: sensor.dwd_current_warn_count
                  type: custom:multiple-entity-row
                  name: DWD Meldungen aktuell
                  secondary_info: last-changed
                  entities:
                    - entity: sensor.dwd_current_warn_level
                      name: DWD lvl
                    - entity: sensor.dwd_max_warn_level
                      name: max lvl
                - entity: input_boolean.dwd_weather_alert
                  type: custom:multiple-entity-row
                  name: Wetter Alarm
                  secondary_info: last-changed
                  entities:
                    - entity: sensor.count_notification_alerts
                      name: Anz. Alarme

                - type: section
                  label: Warnstufen
                - type: custom:auto-entities
                  card: 
                    type: glance
                    name: ' '
                    state_color: true
                    show_name: false
                    columns: 8
                    card_mod: #todo: das geht noch nicht. Wie den 2. Teil adressieren?
                        style: |
                          ha-card {
                            border: 0px solid green;
                          };
                          ha-card div.entities.no-header {
                            padding-top: 0px;
                          };
                  entities:
                    - entity: sensor.dwd_current_warn_level
                      name: DWD Warnstufe
                  filter:
                    include:
                      - entity_id: 'sensor.dwd_current_warn_level_*'
                        state: '>= 0'
                  sort:
                    method: state
                    numeric: true
                    reverse: true
                  show_empty: false
                  unique: true

  #------------------------------------------------
  # MeteoBlue Meteogram
  - type: picture
    image: !secret meteogram_image
    tap_action:
      action: url
      url_path: !secret meteogram_url

  #------------------------------------------------
  # Wetter-Entities
  - type: entities
    title: Wetter, Sonne, Regen
    show_header_toggle: false
    <<: *style_header
    entities:
      - entity: weather.dwd_weather_ak_stuttgart
        name: Temperatur (DWD)
      - entity: weather.home_hourly
        name: Temperatur (OWM)
      - type: section
        label: Sonnenstand
      - entity: sensor.sun_elevation
        type: custom:multiple-entity-row
        name: Azimut
        icon: mdi:weather-sunset #.orbit
        state_header: Höhe
        entities:
        - entity: sensor.sun_direction
          name: Richtung
        - entity: sensor.sun_elevation_noon
          name: Höhe max
      - entity: sun.sun
        icon: mdi:theme-light-dark
      - type: section
        label: Sonnenschein
      - entity: sensor.sunshine_intensity #sensor.sun_is_shining
        type: custom:multiple-entity-row
        name: Sonne scheint
        icon: mdi:white-balance-sunny
        state_header: prob.
        entities:
        - entity: sensor.sunshine_south
          name: Süd
        - entity: sensor.sunshine_west
          name: West
        - entity: sensor.sunshine_elevation_ratio
          name: elev.
      - entity: sensor.forcast_sunshine_hours_tomorrow
        type: custom:multiple-entity-row
        name: Dauer
        icon: mdi:sun-wireless #mdi:sun-clock-outline #geht nicht
        state_header: morgen
        entities:
        - entity: sensor.sunshine_hours_yesterday
          name: gestern
          format: precision1
        - entity: sensor.sunshine_hours_today
          name: heute ist
          format: precision1
        - entity: sensor.forcast_sunshine_hours_today
          name: heute noch


  #------------------------------------------------
  # Themperatur - Chart
  - !include ../cards/weather_chart_temp.yaml

  # # Niederschlag - Chart
  # - !include ../cards/weather_chart_rainforecast.yaml

  # #------------------------------------------------
  # - type: history-graph
  #   hours_to_show: 48
  #   entities:
  #     - entity: weather.dwd_weather_ak_stuttgart
  #       name: DWD
  #     - entity: weather.home_hourly
  #       name: OWM

  #------------------------------------------------
  # 3 different satelite pictures (rain, clouds, snow); can be toggled by tapping on them. 
  - type: custom:vertical-stack-in-card
    cards:
    - type: conditional
      conditions:
        - entity: input_select.type_of_satelite  #value stored the current selection
          state: "Bewölkung"
      card:
        type: picture-entity
        entity: camera.satelite_clouds
        name: Bewölkung #clouds
        show_state: false
        tap_action:
          action: call-service
          service: input_select.select_next
          service_data:
            entity_id: input_select.type_of_satelite
    - type: conditional
      conditions:
        - entity: input_select.type_of_satelite
          state: "Regen"
      card:
        type: picture-entity
        entity: camera.satelite_rain
        name: Regen #rain
        show_state: false
        tap_action:
          action: call-service
          service: input_select.select_next
          service_data:
            entity_id: input_select.type_of_satelite            
    - type: conditional
      conditions:
        - entity: input_select.type_of_satelite
          state: "Schnee"
      card:
        type: picture-entity
        entity: camera.satelite_snow
        name: Schnee #snow
        show_state: false
        tap_action:
          action: call-service
          service: input_select.select_next
          service_data:
            entity_id: input_select.type_of_satelite
